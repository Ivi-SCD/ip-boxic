type Mutation {
    addCountry(countryDTO: CountryDTO): CountryResponse
    deleteCountry(id: ID!): CountryResponse
    updateCountry(countryDTO: CountryDTO!): CountryResponse

    addArtist(artistDTO: ArtistDTO): ArtistResponse
    deleteArtistById(id: ID!): ArtistResponse
    updateArtist(artistDTO: ArtistDTO): [ArtistResponse]
}

type Country {
    id: ID!
    code: String!
}

input CountryDTO {
    code: String!
}

type CountryResponse {
    code: String!
}

input ArtistDTO {
    name: String!
    birthdate: String!
    country_id: Int!
    artistType: ArtistType!
}

type ArtistResponse {
    name: String!
    birthdate: String!
    country: Country!
    artistType: ArtistType!
}

enum ArtistType {
    SOLO
    BAND
    DUO
    TRIO
}

type Query {
    findCountryById(id: ID!): CountryResponse
    findCountryByCode(code: String!): CountryResponse
    findAllCountries: [CountryResponse]

    findAllArtists: [ArtistResponse]
    findArtistByName(name: String): ArtistResponse
    findArtistsByCountryCode(code: String!): [ArtistResponse]
}